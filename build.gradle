plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

bootJar {
	mainClass = 'com.hanwha.tax.batch.BatchApplication'
	archivesBaseName = 'tax'
	archiveFileName = 'tax_batch.jar'
	archiveVersion = "0.0.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa'

	//swagger 기능 추가
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	//swagger ui 추가
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	// sftp
	implementation group: 'com.jcraft', name: 'jsch', version: '0.1.54'
	// json
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

	// security & JWT
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	//언어 설정
//	implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'

	// httpClient
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

// clean task 실행시 QClass 삭제
clean {
	delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성 위치
}
